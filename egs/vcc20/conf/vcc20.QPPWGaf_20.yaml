# This is the hyperparameter configuration file for Parallel WaveGAN.
# Please make sure this is adjusted for the vcc2018. If you want to
# apply to the other dataset, you might need to carefully change some parameters.
# This configuration requires 12 GB GPU memory and takes ~3 days on TITAN V.

###########################################################
#                FEATURE EXTRACTION SETTING               #
###########################################################
feat_type: "melf0h128"     # Feature type
sampling_rate: 24000       # Sampling rate.
fft_size: 1024             # FFT size.
hop_size: 128              # Hop size.
win_length: null           # Window length.
                           # If set to null, it will be the same as fft_size.
window: "hann"             # Window function.
num_mels: 80               # Number of mel basis.
fmin: 80                   # Minimum freq in mel basis calculation.
fmax: 7600                 # Maximum frequency in mel basis calculation.
shiftms: 5.3333334         # Frame shift (ms)
minf0: 40                  # Minimum f0
maxf0: 800                 # Maximum f0
pow_th: -20                # Power threshold
uv_dim_idx: 0              # u/v dimension index
f0_dim_idx: 1              # f0 dimension index
stats_shift: 1             # shift of feature dimension (the first dim is U/V)
mean_path: "/melf0h128/mean"
scale_path: "/melf0h128/scale"

###########################################################
#         GENERATOR NETWORK ARCHITECTURE SETTING          #
###########################################################
generator_type: "QPPWGGenerator" # Generator type.
generator_params:
    in_channels: 1        # Number of input channels.
    out_channels: 1       # Number of output channels.
    blockA: 10            # Number of adaptive residual blocks.
    cycleA: 2             # Number of adaptive dilation cycles.
    blockF: 10            # Number of fixed residual blocks.
    cycleF: 1             # Number of fixed dilation cycles.
    cascade_mode: 1       # Network cascaded mode (0: fix->adaptive; 1: adaptive->fix).
    residual_channels: 64 # Number of channels in residual conv.
    gate_channels: 128    # Number of channels in gated conv.
    skip_channels: 64     # Number of channels in skip conv.
    aux_channels: 82      # Number of channels for auxiliary feature conv.
    aux_context_window: 2 # Context window size for auxiliary feature.
                          # If set to 2, previous 2 and future 2 frames will be considered.
    upsample_params:                      # Upsampling network parameters.
        upsample_scales: [4, 4, 4, 2]     # Upsampling scales. Prodcut of these must be the same as hop size.

###########################################################
#       DISCRIMINATOR NETWORK ARCHITECTURE SETTING        #
###########################################################
discriminator_type: "PWGDiscriminator"
discriminator_params:
    in_channels: 1        # Number of input channels.
    out_channels: 1       # Number of output channels.
    kernel_size: 3        # Number of output channels.
    layers: 10            # Number of conv layers.
    conv_channels: 64     # Number of chnn layers.
    bias: true            # Whether to use bias parameter in conv.
    use_weight_norm: true # Whether to use weight norm.
                          # If set to true, it will be applied to all of the conv layers.
    nonlinear_activation: "LeakyReLU" # Nonlinear function after each conv.
    nonlinear_activation_params:      # Nonlinear function parameters
        negative_slope: 0.2           # Alpha in LeakyReLU.

###########################################################
#                   STFT LOSS SETTING                     #
###########################################################
stft_loss_params:
    fft_sizes: [1024, 2048, 512]  # List of FFT size for STFT-based loss.
    hop_sizes: [120, 240, 50]     # List of hop size for STFT-based loss
    win_lengths: [600, 1200, 240] # List of window length for STFT-based loss.
    window: "hann_window"         # Window function for STFT-based loss

###########################################################
#               ADVERSARIAL LOSS SETTING                  #
###########################################################
lambda_adv: 4.0  # Loss balancing coefficient.

###########################################################
#                  DATA LOADER SETTING                    #
###########################################################
batch_size: 6              # Batch size.
batch_max_steps: 25520     # Length of each audio in batch. Make sure dividable by hop_size.
pin_memory: true           # Whether to pin memory in Pytorch DataLoader.
num_workers: 2             # Number of workers in Pytorch DataLoader.
remove_short_samples: true # Whether to remove samples the length of which are less than batch_max_steps.
allow_cache: true          # Whether to allow cache in dataset. If true, it requires cpu memory.

###########################################################
#             OPTIMIZER & SCHEDULER SETTING               #
###########################################################
generator_optimizer_params:
    lr: 0.0001             # Generator's learning rate.
    eps: 1.0e-6            # Generator's epsilon.
    weight_decay: 0.0      # Generator's weight decay coefficient.
generator_scheduler_params:
    step_size: 200000      # Generator's scheduler step size.
    gamma: 0.5             # Generator's scheduler gamma.
                           # At each step size, lr will be multiplied by this parameter.
generator_grad_norm: 10    # Generator's gradient norm.
discriminator_optimizer_params:
    lr: 0.00005            # Discriminator's learning rate.
    eps: 1.0e-6            # Discriminator's epsilon.
    weight_decay: 0.0      # Discriminator's weight decay coefficient.
discriminator_scheduler_params:
    step_size: 200000      # Discriminator's scheduler step size.
    gamma: 0.5             # Discriminator's scheduler gamma.
                           # At each step size, lr will be multiplied by this parameter.
discriminator_grad_norm: 1 # Discriminator's gradient norm.

###########################################################
#                    INTERVAL SETTING                     #
###########################################################
discriminator_train_start_steps: 100000 # Number of steps to start to train discriminator.
train_max_steps: 400000                 # Number of training steps.
save_interval_steps: 5000               # Interval steps to save checkpoint.
eval_interval_steps: 1000               # Interval steps to evaluate the network.
log_interval_steps: 100                 # Interval steps to record the training log.

###########################################################
#                     OTHER SETTING                       #
###########################################################
num_save_intermediate_results: 4  # Number of results to be saved as intermediate results.
